"""
Django settings for playgraund project.
Generated by 'django-admin startproject' using Django 5.1.3.
"""
from pathlib import Path
from datetime import timedelta
from corsheaders.defaults import default_headers
import os

from dotenv import load_dotenv
load_dotenv()  # reads .env at project root

BASE_DIR = Path(__file__).resolve().parent.parent

# ----- helpers -----
def env_bool(name: str, default: bool = False) -> bool:
    val = os.getenv(name)
    if val is None:
        return default
    return val.lower() in {"1", "true", "yes", "on"}

def env_list(name: str, default_list=None):
    default_list = default_list or []
    raw = os.getenv(name)
    if not raw:
        return default_list
    return [item.strip() for item in raw.split(",") if item.strip()]

# ----- core -----
SECRET_KEY = os.getenv(
    "DJANGO_SECRET_KEY",
    "django-insecure-%seyk9_iyy8nk-!ih_zlvm@bqt*y6j%%qedt&&(n+5@g$h5)n1",
)
DEBUG = env_bool("DJANGO_DEBUG", True)
ALLOWED_HOSTS = env_list("DJANGO_ALLOWED_HOSTS", ["localhost", "127.0.0.1"])

INSTALLED_APPS = [
    "channels",
    "daphne",

    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # apps
    "booking",
    "field",
    "payments",
    "timeslot",
    "users",
    "blog",
    "subscribers",

    # libs
    "corsheaders",
    "django_filters",
    "rest_framework",
    "rest_framework_simplejwt",
    "django_bootstrap5",
]

ASGI_APPLICATION = "playgraund.asgi.application"
CHANNEL_LAYERS = {
    "default": {"BACKEND": "channels.layers.InMemoryChannelLayer"},
}

# ----- payments / chapa -----
CHAPA_PUBLIC_KEY   = os.getenv("CHAPA_PUBLIC_KEY", "")
CHAPA_SECRET_KEY   = os.getenv("CHAPA_SECRET_KEY", "")
CHAPA_WEBHOOK_SECRET = os.getenv("CHAPA_WEBHOOK_SECRET", "")
CHAPA_RETURN_URL   = os.getenv("CHAPA_RETURN_URL", "http://localhost:5173/payment-return")
CHAPA_CALLBACK_URL = os.getenv("CHAPA_CALLBACK_URL", "http://127.0.0.1:8000/booking/payments/chapa/callback/")

# NEW: force all weekly slots open (override weekly rules)
ALWAYS_OPEN_SLOTS = env_bool("ALWAYS_OPEN_SLOTS", True)

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
    ],
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=12),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}

CORS_ALLOW_HEADERS = list(default_headers) + ["authorization"]
CORS_ALLOWED_ORIGINS = env_list(
    "CORS_ALLOWED_ORIGINS",
    ["http://localhost:5173", "http://127.0.0.1:5173"],
)
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"]
CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = env_list(
    "CSRF_TRUSTED_ORIGINS",
    ["http://localhost:5174", "http://127.0.0.1:5174"],
)

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "playgraund.urls"
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]
WSGI_APPLICATION = "playgraund.wsgi.application"

AUTH_USER_MODEL = "users.Profile"

DATABASES = {
    "default": {"ENGINE": "django.db.backends.sqlite3", "NAME": BASE_DIR / "db.sqlite3"}
}

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

LANGUAGE_CODE = "en-us"
TIME_ZONE = "Africa/Addis_Ababa"
USE_I18N = True
USE_TZ = True

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "static"
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
# dev-only: skip weekly closure enforcement
#ENFORCE_WEEKLY_CLOSURES = False
